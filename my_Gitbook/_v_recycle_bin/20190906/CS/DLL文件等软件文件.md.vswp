vnote_backup_file_826537664 E:/my_Gitbook/CS/DLL文件等软件开发文件.md

https://zhuanlan.zhihu.com/p/58890747  # 一篇带.dll和.so文件的R包开发教程

如何动态加载dll并继承该类？
https://www.zhihu.com/question/27214154/answer/35690942








在windows中的这些文件比如说exe可执行文件，sys，dll等文件他们其实在本质上都是一样的！他们都共同遵循一个文件格式，叫做**PE文件格式**，感兴趣的同学可以去了解下，然后我们的一个进程呢，不管游戏也好还是其他的东西也好，他们作为进程实际上只是一个空间的概念负责管理这个运行的程序的内存空间(虚拟内存)以及各种资源，比如一个典型的32位进程的4gb虚拟空间中，就会有一个exe文件加上n多个使用到的dll文件，这个exe作为这个进程的运行需要的主体，其他的dll在大部分情况下都是提供导出函数之类的活。。。

当我们想要针对一个游戏进程做一些操作的时候，比如外挂，我想要让这个游戏进程做一些我想做的事，当在程序中想做些什么操作时，那一定是执行了某些代码，你想让目标进程做一些你期望的事的时候就需要让他执行一些你的代码，这个代码可以是进程本身带有的，也可能是你人为加入进去的，怎么往一个进程中加入一段你的代码，然后并且让他可以正常的运行呢？

最直接的就是shellcode，也就是直接把一段代码的二进制直接写到目标进程中去，但是这么做很麻烦，具体麻烦在哪里呢，以一般c/c++的代码举例，你在代码中调用一个函数，在汇编层面或者二进制硬编码层面，他可能是call 目标函数地址 或者 call \[函数地址表中某一项\]这两种调用方式。

这里对于第一种调用，他直接写死了调用的目标函数的地址，如果你直接把这个代码复制到其他进程空间去，那你这段代码所指向的地址在其他进程空间中根本就不知道他此时到底指向的是什么鬼，贸然执行百分之99.999999会跑飞，第二种间接调用也一样，所以shellcode为了保证你注入的代码能运行，就需要针对你的代码做非常多的修正或者限制，太麻烦了。。。

那想要让编写注入的代码和编写普通代码一样简单，想把更多精力花在功能流程上怎么办？这就到了我们的dll注入

之前说了我们的dll和exe本质上是一样一样的，dll和exe一样也有入口函数(我指的不是那个oep而是和main函数一样的dllmain或者叫dllenter函数)当在某些情况下，比如进程第一次加载这个dll到内存中时，或者进程卸载这个dll时，或者进程启动一个线程时或者干掉一个线程时这几种情况下都会调用这个dllmain

这样一来知道这点后我们只要想办法把我们希望执行的代码写在这个dll里，然后在dllmain中调用他，最后想办法让目标进程加载我们这个dll就可以实现让目标进程执行我们代码的目的

那么怎么让目标进程加载我们的dll呢？(好吧我承认我前面一直在跑题)

最简单的方法就是使用APL CreateRemoteThread在目标进程中创建远程线程，然后这个远程线程的线程函数体就指向LoadLibraey加载我们自己的dll，这样远程线程跑起来以后就会加载我们的dll，然后因为我们的dll第一次加载进目标进程空间，所以会执行dllmain，然后就顺理成章的执行了我们事先准备好的猥琐代码了。。。

至于怎么让目标进程在执行loadlibrary的时候参数是我们的的dll的路径呢，这个可以我们用writeProcessMemory配合VirtualAllocEx将路径事先写入目标进程的内存空间

至于怎么获取目标进程中LoadLibrary这个函数在目标进程中的虚拟地址呢？实际上ntdll.dll和kernel32.dll他们在你计算机中每个进程中映射的基址都一样，那么也就是说这几个dll中的函数地址不管在哪个进程中无论是你当前进程，还是目标游戏进程中函数地址都是一样的，拿来用就好。。

以上是最基础的远线程注入，实际上我们还可以通过劫持dll的方式实现dll的注入，或者直接将这个dll当作一堆数据，自己模拟系统加载pe文件的方式将这个dll复制到目标进程空间中并做各种修正
作者：合途
链接：https://www.zhihu.com/question/63847141/answer/550046601
来源：知乎
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

**外挂只要伪装成要被exe加载的dll，就能被加载到exe所在的进程辣~然后就可以干坏事啦！
**
这里可能有人要问了，那我为什么不干脆把外挂做成一个独立的进程，然后去入侵游戏的进程呢？原因是操作系统不允许。自古以来，一个进程要进入别的进程的空间，干的肯定不是什么好事(也没有什么码农希望别人可以随意修改自己的代码吧...)(DOS玩家请不要打我)，所以现代操作系统都有专门的设计，会隔离各个进程，不可以(直接)访问其他进程(甚至操作系统的服务进程也不能(直接)访问！还记得今年早些的熔断/幽灵漏洞么...就是突破了这个限制...)
  
  

为啥说不能(直接)呢....比如Windows吧...Windows的确是隔离进程的，但是同时，他又给了不少接口，有需要的进程就可以通过这些个接口，在操作系统做媒的情况下，访问别的进程的一部分空间....(吐血)不过事实上！还是很少有外挂用这种方式搞破坏。因为操作系统提供的这些接口太谨慎了，能干的事情还是太少了。

所以，大部分外挂还是选择直接做成dll，直接成为游戏进程里的一等公民，这样就可以无痛快捷的直接访(xiu)问(gai)整块进程了，岂不美哉？

  

但是其实“伪装”这个做法还是不够好。你伪装成了exe需要的dll，你的确是加载进去了，但是exe本来要用的那个模块的功能就遭殃了...(不过说实话，答主三四年前做DNF外挂的时候，还真见过这种操作...)

所以现在的外挂进入进程，用的都是dll注入技术。听名字就知道，就是和打针一样，把exe不需要的dll强行加载进进程里去。

嘿嘿！事实上贴心的Windows又提供了接口，可以让开发者直接把dll注入进其他进程去！(游戏开发者满脸黑线

但是魔高一尺道高一丈！现在的反外挂系统，都会监视Windows的这些个接口，发现这些接口被谁调用了！就知道外挂进来了。所以现在的游戏dll注入，一般都用更难被检测出来的输入法注入 而不是Windows提供的接口(道高一尺魔高一丈((逃

输入法注入是啥意思呢！就是Windows的一个特性，你在一个进程切换输入法，Windows就会把输入法的dll(输入法dll有个别名，叫ime，但其实和dll大同小异)注入到当前进程里去。因为这个是输入法dll，还是操作系统官方名正言顺的注入，所以反外挂系统也很难判断...
作者：LoyieKing  
链接：https://www.zhihu.com/question/63847141/answer/550137041  
来源：知乎  
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

# PE文件格式详解(上)
portable File Format（可移植文件）的简写，我们比较熟悉的DLL和exe文件都是PE文件。了解PE文件格式有助于加深对操作系统的理解，掌握可执行文件的数据结构机器运行机制，对于逆向破解，加壳等安全方面方面的同学极其重要。接下来我将通过接下来几篇详细介绍PE文件的格式。
https://www.cnblogs.com/2f28/p/9800992.html


进程注入的dll文件该怎么编写？
https://www.zhihu.com/question/28360829/answer/40514399


# matlab如何调用现成的dll文件的函数？
https://www.zhihu.com/question/38481168/answer/76598467
下了个mRMR工具包，里面出了m文件，还有dll文件，m文件需要调用dll文件里的函数，可是每次到这步就报错，请问怎么调用？

如何在powershell中删除自己读取的dll文件？
https://www.zhihu.com/question/51091027/answer/127335004





# 第一个DLL程序

https://zhuanlan.zhihu.com/p/57427921


https://zhuanlan.zhihu.com/p/32615811



# 一个Windows应用程序，例如大型游戏，除了exe文件外，其余的文件都是些什么文件？有什么内容？

一个应用程序安装后往往有几十个上百个文件，这些文件大多数都是什么用途？里面一般是什么内容？以游戏为例，除了游戏中用到的贴图等资源外，剩下的部分都有什么用途？
作者：一只阿怪  
链接：https://www.zhihu.com/question/24456190/answer/27867687  
来源：知乎  
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。  
  

exe只是一个入口文件，当然，其他的dll文件或者一些你不知道的格式文件，他们包含的东西很多，比如大部分的dll文件，他和exe文件的区别在于，dll文件只提供处理的方法，exe是去执行这些dll的。  
打个比方，你要执行一个数据加密，但你不会写加密算法，恰好你在网上找到一个提供加密算法的dll，你就写一个exe，然后来调用那个dll，执行你的加密过程，你完全可以不需要了解加密是如何执行的，你只需要调用别人提供的dll就可以实现了。  
你说的exe 其实和dll没什么区别，只是，普通人认为exe可以执行，而dll文件和其他文件不能执行而已。其实exe和dll 都是可执行文件，只是exe是提供给用户执行的，dll文件是给程序执行的。

还有一些你看到的什么dat，ini，xml等文件，这些就属于数据文件，文件的后缀并不代表文件的类型，我程序调用一张图片，我可以取名叫“picture.dll” 但它也能被当作图片处理，文件的后缀，只是方便操作系统去识别的，但在程序里，软件只会识别文件的流是不是能被转化成图片或者其他文件类型，不同程序，或者说不同游戏下，dat文件不代表就是同一种文件，只是看你程序如何处理而已，格式都是程序员自己定的。

总结来说，exe是给用户一个入口文件，exe可以是有窗体的，也可以是没有窗体的程序，exe负责去调用各种不同的dll和资源文件，dll也可以去调用其它不同的dll和资源文件，然后exe或者dll去处理数据，呈现给用户一个GUI界面去操作。

执行exe文件，就代表演唱会开始，然后需要用到各种各样的配角去配合完成演唱会，exe文件就去调用需要的dll，比如，(**配乐.dll**)，执行"**配乐.dll**"，可以开始播放背景音乐，调用**灯光.gif,**就可以呈现出各种各样的光效，但**灯光.gif** 由谁来调用呢？陈奕迅不会去操控灯光(但程序里可以exe去调用，也可以交给外部dll去调用，但与其让陈奕迅去学会操控灯效，不如请个灯效师，也就是**灯光开始.dll**这个灯效师)，所以这时候有个**灯光开始.dll**就可以去控制灯光.....

  

# 编程调用DLL
https://jingyan.baidu.com/article/ff42efa92c49cfc19e2202fd.html
C++编写 动态链接库dll 和 调用dll

https://www.jianshu.com/p/e910ca82b542
Matlab调用C++ dll实例

https://blog.csdn.net/kahhy/article/details/55505499
java调用dll动态库文件的一般总结

python调用dll方法
https://blog.csdn.net/lf8289/article/details/2322550
Python调用windows下DLL详解 - ctypes库的使用
https://blog.csdn.net/zmnbehappy/article/details/78697185
p


# 其实Windows下可以用Rundll32.exe直接运行dll的： Rundll32.exe DLLname，Functionname [Arguments] 比如： Rundll32.Exe User32.dll LockWorkStation 上面这条命令是调用User32.dll的LockWorkStation函数锁定桌面


DLL与UEFI的故事之一：Windows下运行Dll的三种方式
https://zhuanlan.zhihu.com/p/30000572



# 怎么样尽可能地分析出一个 dll 文件的有用信息？
https://www.zhihu.com/question/38501516/answer/76687415




h：头文件，给编译器用来检查语法  
lib：主要包含了如何找到函数的地址的信息，以及附带一些编译了一半的二进制数据  
obj：编译了一半的二进制数据  
dll、exe：可以运行
.h，实际上就是普通文件，特殊的后缀名而已，你自己用什么后缀名无所谓，和.c没什么区别，include动作，实际上就是可以理解为copy过来，你也可以include .c啊。

.o ，编译产生的目标文件，有一定格式的二进制文件，除了除了头信息，debug信息之外，仔细观察，实际上就是平台的机器码。

.dll，动态库，库文件，可以理解里面是具体的函数二进制打包，给其他可执行程序用的，好像，也有自己就能运行的。动态就是编译的时候只指定lib路径和声明就行，不会实际组成可执行文件，实际运行的时候操作系统会load这些动态库，给可执行程序使用。对应的是静态库，链接的时候就组成到可执行文件里，一般后缀.a，不用load.

# 《深入理解计算机系统》、《程序员的自我修养》
《Advanced C and C++ Compiling》，包治好


一个系列的文章，希望有帮助： 编译、连接、.h文件和.lib文件、.dll文件还有.o文件是什么关系？他们各有什么作用？ - 盛世囚徒的回答 - 知乎
https://www.zhihu.com/question/20783462/answer/140959421
打通思路之编译与链接(1)-编译
https://hangsz.github.io/2016/07/26/打通思路之编译与链接(1)-编译/

打通思路之编译与链接(2)-目标文件 

https://hangsz.github.io/2016/07/29/

打通思路之编译与链接(3)-静态链接 
https://hangsz.github.io/2016/08/02/打通思路之编译与链接(3)-静态链接/


打通思路之编译与链接(2)-目标文件/打通思路之编译与链接(4)-动态链接 
https://hangsz.github.io/2016/08/02/打通思路之编译与链接(4)-动态链接/

主要参考书籍为《深入理解计算机系统》、《程序员的自我修养》，两本都是极好的书。



# # 独辟蹊径：如何通过URL文件实现DLL劫持

https://zhuanlan.zhihu.com/p/37168236

# PE格式
https://zhuanlan.zhihu.com/p/31967907
PE可执行文件格式详解

https://zhuanlan.zhihu.com/p/47075612


新手——010纯手工编辑打造PE文件
https://zhuanlan.zhihu.com/p/36177304


















